{"version":3,"sources":["components/ToDoItem.jsx","components/InputArea.jsx","components/App.jsx","index.js"],"names":["ToDoItem","props","useState","isDone","SetIsDone","onClick","prevValue","onDoubleClick","onChecked","id","style","textDecoration","text","InputArea","inputText","setInputText","className","onChange","event","newValue","target","value","type","onAdd","App","items","setItems","deleteItem","prevItems","filter","item","index","map","todoItem","ReactDOM","render","document","getElementById"],"mappings":"kLAuBeA,MArBf,SAAkBC,GAEd,MAA4BC,oBAAS,GAArC,mBAAMC,EAAN,KAAeC,EAAf,KAOF,OACE,qBACEC,QAPF,WACID,GAAU,SAAAE,GACN,OAAQA,MAMdC,cAAe,WACbN,EAAMO,UAAUP,EAAMQ,KAH1B,SAME,oBAAIC,MAAU,CAACC,eAAgBR,EAAQ,eAAiB,QAAxD,SAAkEF,EAAMW,UCO/DC,MAvBf,SAAmBZ,GACjB,MAAkCC,mBAAS,IAA3C,mBAAOY,EAAP,KAAkBC,EAAlB,KAOA,OACE,sBAAKC,UAAU,OAAf,UACE,uBAAOC,SAPX,SAAsBC,GACpB,IAAMC,EAAWD,EAAME,OAAOC,MAC9BN,EAAaI,IAKoBG,KAAK,OAAOD,MAAOP,IAClD,wBACET,QAAS,WACPJ,EAAMsB,MAAMT,GACZC,EAAa,KAHjB,SAME,6CCwBOS,MAvCf,WACE,MAA0BtB,mBAAS,IAAnC,mBAAOuB,EAAP,KAAcC,EAAd,KAQA,SAASC,EAAWlB,GAClBiB,GAAS,SAAAE,GACP,OAAOA,EAAUC,QAAO,SAACC,EAAMC,GAC7B,OAAOA,IAAUtB,QAKvB,OACE,sBAAKO,UAAU,YAAf,UACE,qBAAKA,UAAU,UAAf,SACE,8CAEF,cAAC,EAAD,CAAWO,MAnBf,SAAiBT,GACfY,GAAS,SAAAE,GACP,MAAM,GAAN,mBAAWA,GAAX,CAAsBd,UAkBtB,8BACE,6BACGW,EAAMO,KAAI,SAACC,EAAUF,GAAX,OACT,cAAC,EAAD,CAEEtB,GAAIsB,EACJnB,KAAMqB,EACNzB,UAAWmB,GAHNI,cC3BnBG,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.ffa60751.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction ToDoItem(props) {\r\n\r\n    const[isDone , SetIsDone] = useState(false);\r\n\r\n    function handleclick(){\r\n        SetIsDone(prevValue => {\r\n            return !prevValue;\r\n        });\r\n    }\r\n  return (\r\n    <div\r\n      onClick = {handleclick}\r\n      onDoubleClick={() => {\r\n        props.onChecked(props.id);\r\n      }}\r\n    >\r\n      <li style = { {textDecoration: isDone? \"line-through\" : \"none\"}}>{props.text}</li>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ToDoItem;\r\n","import React, { useState } from \"react\";\r\n\r\nfunction InputArea(props) {\r\n  const [inputText, setInputText] = useState(\"\");\r\n\r\n  function handleChange(event) {\r\n    const newValue = event.target.value;\r\n    setInputText(newValue);\r\n  }\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      <input onChange={handleChange} type=\"text\" value={inputText} />\r\n      <button\r\n        onClick={() => {\r\n          props.onAdd(inputText);\r\n          setInputText(\"\");\r\n        }}\r\n      >\r\n        <span>Add</span>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InputArea;\r\n","import React, { useState } from \"react\";\r\nimport ToDoItem from \"./ToDoItem\";\r\nimport InputArea from \"./InputArea\";\r\n\r\nfunction App() {\r\n  const [items, setItems] = useState([]);\r\n\r\n  function addItem(inputText) {\r\n    setItems(prevItems => {\r\n      return [...prevItems, inputText];\r\n    });\r\n  }\r\n\r\n  function deleteItem(id) {\r\n    setItems(prevItems => {\r\n      return prevItems.filter((item, index) => {\r\n        return index !== id;\r\n      });\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"heading\">\r\n        <h1>To-Do List</h1>\r\n      </div>\r\n      <InputArea onAdd={addItem} />\r\n      <div>\r\n        <ul>\r\n          {items.map((todoItem, index) => (\r\n            <ToDoItem\r\n              key={index}\r\n              id={index}\r\n              text={todoItem}\r\n              onChecked={deleteItem}\r\n            />\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}